var L=new oe;function oe(){this.generateGuid=t,this.mergeProps=e,this.getElementIndex=s,this.createRangeArray=p,this.isArrayOfHTMLElement=R,this.parseDimension=y,this.setElementAttr=a,this.setElementStyle=E;function t(){return"a"+("1000000-1000-4000-8000"+-1e11).replace(/[018]/g,d=>(d^crypto.getRandomValues(new Uint8Array(1))[0]&15>>d/4).toString(16))}function e(n,d){let w={...n};for(let o in d)d[o]instanceof Object&&!(d[o]instanceof Array)&&!(d[o]instanceof Function)&&!(d[o]instanceof HTMLElement)?w[o]=e(n[o]||{},d[o]):w[o]=d[o];return w}function s(n){return Array.from(n.parentElement.children).indexOf(n)}function p(n,d){let w=n<=d;return Array.from({length:Math.abs(d-n)+1},(o,f)=>w?n+f:n-f)}function R(n){return Array.isArray(n)?n.every(d=>d instanceof HTMLElement):!1}function y(n){return typeof n=="number"?`${n}px`:n||""}function E(n,d={}){a(n,d,"style")}function a(n,d={},w=""){n=n instanceof Array?n:[n],n.forEach(o=>{for(let f in d){let g=w?o[w]:o,i=d[f];if(w=="style"){let m="";f.match(/index|line|grid|order|tab|orphans|widows|columns|counter|opacity/i)||(i=typeof i=="number"?i+"px":i),i.match(/important/i)&&(i=i.substring(0,i.indexOf("!")-1).trim(),m="important"),m?g.setProperty(f,i,m):g[f]=i}else typeof g[f]>"u"?g.setAttribute(f,i):g[f]=i}})}}var z=class{data=[];place=null;header={hidden:!1,disabled:!1};columns=null;rows={selectOnClick:!1,allowMultipleSelection:!0};cells=null;borders={table:{top:!1,bottom:!1,all:!1,radius:null},rows:!0,cells:!1};footer={hidden:!1,disabled:!1,content:null};width=null;height=null;style=null;checkbox=!1;sort=!1;resize=!1;disabled=!1;onAddRow=null;onSelectRows=null;onUnselectRows=null;onUpdateRow=null;onRemoveRows=null;onDoubleClickRow=null;onResizeColumn=null;onClickOut=null;onCopyClip=null;onScroll=null;onScrollEnd=null},_=class{checkbox=!1;name=null;displayName=null;width=null;minWidth=null;resize=!1;hidden=!1;disabled=!1;style=null},A=class{row=null;checkbox=!1;data=null;value=null;name=null;hidden=!1;disabled=!1;display=null;style=null};function q(t,e){let s=R(),p={element:s,isHidden:e.hidden,isDisabled:e.disabled,options:e,show:E,checked:y,disable:a};return E(!e.hidden),a(e.disabled),p;function R(){let n=document.createElement("div");if(n.classList.add("dt-header-cell"),e.checkbox)n.classList.add("checkbox"),n.insertAdjacentHTML("afterbegin",`
				<label class="dt-row-checkbox">
					<input type="checkbox" />
				</label>
			`),n.querySelector("label").addEventListener("change",w=>{w.target.checked?t.selectRows():t.unselectRows(w)});else{n.dataset.name=e.name,n.insertAdjacentHTML("afterbegin",`
				<label class="name" title="${e.title||""}">${e.displayName}</label>
				<span class="controls">
					<i class="sort asc" title="Sort"></i>
					<div class="resizer"></div>
				</span>
			`);let d=n.querySelector(".sort");t.options.sort&&e.sort!=!1&&(n.classList.add("sortable"),n.addEventListener("click",()=>{if(t.header.isDisabled||p.isDisabled)return;t.header.cells.forEach(o=>o.element.classList.remove("sorted"));let w=d.getAttribute("ascendent")!="true";n.classList.add("sorted"),d.classList.toggle("asc",w),d.classList.toggle("desc",!w),d.setAttribute("ascendent",w),t.sort(e.name,w)})),(t.options.resize||e.resize)&&n.classList.add("resizable"),e.style&&L.setElementStyle(n,e.style)}return t.options.borders.cells&&n.classList.add("cell-border-right"),n}function y(n=!0){let d=s.querySelector(".dt-row-checkbox input");d&&(d.checked=n)}function E(n=!0){p.isHidden=!n,e.hidden=p.isHidden,s.classList.toggle("visible",n),s.classList.toggle("hidden",!n),t._setBorders()}function a(n=!0){p.isDisabled=n,s.dataset.disabled=n,Array.from(s.children).forEach(d=>d.classList.toggle("disabled",n))}}function I(t){let e={element:null,cells:[],isHidden:!1,isDisabled:!1,cell:R,show:y,disable:E},s=p();return e;function p(){let a=document.createElement("div");if(a.classList.add("dt-header"),t.options.checkbox){let n=new _;n.checkbox=!0,n.resize=!1;let d=q(t,n);e.cells.push(d),a.appendChild(d.element)}for(let n in t.options.columns){let d=t.options.columns[n],w=L.mergeProps(new _,d);w.name=n;let o=q(t,w);e.cells.push(o),a.appendChild(o.element)}return e.element=a,a}function R(a){return typeof a=="number"?e.cells[a]:e.cells.find(d=>d.options.name==a)}function y(a=!0){e.isHidden=!a,s.classList.toggle("hidden",!a)}function E(a=!0){e.isDisabled=a,Array.from(s.children).forEach(n=>{n.classList.toggle("disabled",a)})}}function O(t,e){let s=R(),p={element:s,isHidden:e.hidden,isDisabled:e.disabled,options:e,value:y,display:E,checked:d,show:a,showContent:n,disable:w};return a(!e.hidden),n(!e.hidden),E(y()),p;function R(){let o=document.createElement("div");if(o.classList.add("dt-body-row-cell"),e.checkbox){o.classList.add("checkbox"),o.insertAdjacentHTML("afterbegin",`
				<label class="dt-row-checkbox">
					<input type="checkbox"/>
				</label>
			`);let f=o.querySelector("label");f.addEventListener("click",g=>g.stopPropagation()),f.addEventListener("change",g=>{t.header.cells[0].checked(!1),e.row.select(g.target.checked,g)})}else{let f=e.value!=null?e.value:"",g=t.options.cells?t.options.cells[e.name]||{}:{};o.dataset.name=e.name,o.insertAdjacentHTML("afterbegin",`
				<div class="value-hidden">${f}</div>
				<div class="value-display">${f}</div>
			`),g.style&&L.setElementStyle(o,g.style)}return t.options.borders.cells&&o.classList.add("cell-border-right"),t.options.borders.rows&&o.classList.add("cell-border-bottom"),o}function y(o,f=!0){let g=s.querySelector(".value-hidden");if(g)if(o!=null)e.data[e.name]=o,g.textContent=o,f&&E(o);else return o=e.value!=null?e.value:g.textContent,o}function E(o){let f=s.querySelector(".value-display"),g=t.options.cells?t.options.cells[e.name]||{}:{};if(g.display){let i=g.display({row:e.row,item:e.data,value:o});f.innerHTML="",i instanceof HTMLElement?f.appendChild(i):L.isArrayOfHTMLElement(i)?i.forEach(m=>f.appendChild(m)):f.innerHTML=i}else f&&(f.innerHTML=o)}function a(o=!0){p.isHidden=!o,s.classList.toggle("visible",o),s.classList.toggle("hidden",!o)}function n(o=!0){p.isHidden=!o,Array.from(s.children).forEach(f=>{f.classList.toggle("hidden",!o)})}function d(o=!0){let f=s.querySelector(".dt-row-checkbox input");f&&(f.checked=o)}function w(o=!0){p.isDisabled=o,Array.from(s.children).forEach(f=>{f.classList.toggle("disabled",o)})}}function X(t,e){let s={element:null,id:L.generateGuid(),cells:[],isSelected:!1,isHidden:!1,isDisabled:!1,_data:e.data||{},data:o,cell:E,index:a,show:n,disable:d,select:w,text:f,remove:g},p=R();return y(),s;function R(){let i=document.createElement("div");return i.id=s.id,i.classList.add("dt-body-row"),i.addEventListener("click",m=>{!t.options.checkbox&&t.options.rows.selectOnClick&&w(!0,m)}),i.addEventListener("dblclick",m=>{t.options.rows.selectOnClick&&(window.getSelection&&window.getSelection().removeAllRanges(),t.options.onDoubleClickRow&&t.options.onDoubleClickRow({row:s,event:m}))}),i.classList.toggle("selectable",t.options.rows.selectOnClick),s.element=i,i}function y(){if(t.options.checkbox){let i=new A;i.row=s,i.checkbox=!0,i.resize=!1;let m=O(t,i);s.cells.push(m),p.appendChild(m.element)}for(let i in t.options.columns){let m=t.options.columns[i],k=L.mergeProps(new A,m);k.row=s,k.name=i,k.data=s._data,k.value=s._data[i];let S=O(t,k);s.cells.push(S),p.appendChild(S.element)}}function E(i){return typeof i=="number"?s.cells[i]:s.cells.find(k=>k.options.name==i)}function a(){return L.getElementIndex(p)}function n(i=!0){s.isHidden=!i,p.classList.toggle("hidden",!i)}function d(i=!0){s.isDisabled=i,p.classList.toggle("disabled",i)}function w(i=!0,m){if(m&&m.shiftKey&&window.getSelection&&window.getSelection().removeAllRanges(),t.options.checkbox)s.isSelected=i,t.options.onSelectRows&&t.options.onSelectRows({rows:t.selectedRows()});else{if((!t.options.rows.allowMultipleSelection||!m||!m.ctrlKey&&!m.shiftKey)&&(t.unselectRows(m,!1),t._lastRowSelected=null),m&&m.ctrlKey&&(i=!s.isSelected),m&&m.shiftKey&&t._lastRowSelected){let k=L.createRangeArray(L.getElementIndex(t._lastRowSelected),L.getElementIndex(p));t.selectRows(k)}s.isSelected=i,(!m||!m.shiftKey)&&(t._lastRowSelected=p),p.classList.toggle("selected",i),t.options.onSelectRows&&t.options.onSelectRows({rows:t.selectedRows()})}}function o(i,m=!1){if(i){for(let k in i){let S=i[k];s.cell(k).value(S)}t.options.onUpdateRow&&t.options.onUpdateRow({row:s,fields:i})}else return m?s._data:(({meta:k,...S})=>S)(s._data)}function f(i){let m=i?s.cells.filter(S=>!!i.find(H=>H==S.options.name)):s.cells,k=[];return m.forEach(S=>k.push(S.element.querySelector(".value-display").innerText.trim())),k}function g(){t.removeRows(s)}}function J(t){let e=p(),s={element:e,isHidden:t.options.footer.hidden,isDisabled:t.options.footer.disabled,show:y,disable:E,content:R};return R(t.options.footer.content),y(!s.isHidden),E(s.isDisabled),s;function p(){let a=document.createElement("div");return a.classList.add("dt-footer"),a}function R(a){a&&(typeof a=="string"?e.innerHTML=a:a instanceof HTMLElement&&e.appendChild(a))}function y(a=!0){s.isHidden=!a,e.classList.toggle("hidden",!a)}function E(a=!0){s.isDisabled=a,e.classList.toggle("disabled",a)}}function V(t){let e={options:t,id:t.id?"dt-"+t.id:L.generateGuid(),element:null,elements:{scrollable:null},header:null,body:{element:null},_columnWidths:null,rows:[],_lastRowSelected:null,footer:null,isDisabled:!1,_data:t.data||[],data:o,append:g,load:f,reload:i,width:d,height:w,column:n,addRow:k,selectedRows:S,selectRows:Q,unselectRows:Y,rowsByFieldValue:H,moveSelectedRows:Z,removeRows:M,removeSelectedRows:N,removeUnselectedRows:ee,sort:te,disable:P,clear:m,export:le,_setBorders:$},s=R(),p=`${e.id}-widths`;return y(),E(),a(),d(t.width),w(t.height),P(t.disabled),f(t.data),e;function R(){let l=document.createElement("div");l.id=e.id,l.classList.add("dt");let u=document.createElement("div");if(u.classList.add("scrollable"),l.appendChild(u),u.addEventListener("scroll",r=>{let c=r.target,h=Math.ceil(c.scrollTop+c.clientHeight)>=c.scrollHeight-1;h&&!c.alreadyAtBottom?(c.alreadyAtBottom=!0,t.onScrollEnd&&t.onScrollEnd({event:r,end:!0})):h||(c.alreadyAtBottom=!1)}),t.borders.table.all){if(l.classList.add("table-border-all"),t.borders.table.radius!=null){let r=t.borders.table.radius;l.style.borderRadius=L.parseDimension(r),u.style.borderRadius=L.parseDimension(r)}}else t.borders.table.top&&l.classList.add("table-border-top"),t.borders.table.bottom&&l.classList.add("table-border-bottom");return t.style&&L.setElementStyle(l,t.style),e.element=l,e.elements.scrollable=u,l}function y(){let l=I(e);e.header=l,s.querySelector(".scrollable").appendChild(l.element),l.show(!t.header.hidden),l.disable(t.header.disabled)}function E(){let l=document.createElement("div");l.classList.add("dt-body"),e.body.element=l,s.querySelector(".scrollable").appendChild(l)}function a(){if(t.footer){let l=J(e);e.footer=l,s.appendChild(l.element)}}function n(l){return{show:u,disable:r};function u(c=!0){e.header.cell(l).show(c),e.rows.forEach(h=>h.cell(l).show(c)),U()}function r(c=!0){e.header.cell(l).disable(c),e.rows.forEach(h=>h.cell(l).disable(c))}}function d(l){if(l==null)return s.clientWidth;s.style.width=L.parseDimension(l)||"auto"}function w(l){if(l==null)return s.clientHeight;s.style.height=L.parseDimension(l)||"auto"}function o(l,u=!1){if(l=l||e._data,l.length)for(let r in t.columns)l.forEach(c=>{c.hasOwnProperty(r)||(c[r]="")});return e._data=l,u?e._data:e._data.map(({meta:r,...c})=>c)}function f(l){m(!!l),o(l,!0).forEach(u=>k(u,!1,!1)),U(),ne(),$(),e.elements.scrollable.scrollTop=0}function g(l){o([...e._data,...l],!0),l.forEach(u=>k(u,!1,!1)),$()}function i(){f()}function m(l=!0){l&&o([]),e.rows=[],e.body.element.innerHTML="",e.header.cells[0].checked(!1)}function k(l,u=!0,r=!0){let c=X(e,{data:l});return e.rows.push(c),e.body.element.appendChild(c.element),l.meta={row:{id:c.id}},u&&e._data.push(l),r&&$(),t.onAddRow&&t.onAddRow({row:c}),c}function S(){return e.rows.filter(l=>l.isSelected)}function H(l,u){if(!(l==null||u==null))return e.rows.filter(r=>r._data[l]==u)}function Q(l){l&&(l=l instanceof Array?l:[l]),e.rows.forEach(u=>{let r=!1;if(l){for(let c=0;c<l.length;c++)if(L.getElementIndex(u.element)==l[c]){r=!0;break}}else r=!0;u.isSelected=r,t.checkbox?u.cells[0].checked(r):u.element.classList.toggle("selected",r)}),t.checkbox&&e.header.cells[0].checked(),t.onSelectRows&&t.onSelectRows({rows:S()})}function Y(l,u=!0){e.header.cells[0].checked(!1),S().forEach(r=>{r.isSelected=!1,r.element.classList.remove("selected"),r.cells[0].checked(!1)}),t.onUnselectRows&&u&&t.onUnselectRows({event:l})}function Z(l=!0){if(t.sort)return;if(l)for(let r=e.rows.length-1;r>=0;r--){let c=r,h=r+1;if(e.rows[r].isSelected)if(h<e.rows.length)u(c,h);else break}else for(let r=0;r<e.rows.length;r++){let c=r,h=r-1;if(e.rows[r].isSelected)if(h>=0)u(c,h);else break}e.rows.forEach(r=>e.body.element.appendChild(r.element));function u(r,c){let h=e.rows.splice(r,1)[0],b=e._data.splice(r,1)[0];e.rows.splice(c,0,h),e._data.splice(c,0,b)}}function M(l){l=l instanceof Array?l:[l],l.length&&(l.forEach(u=>{e.rows.forEach((r,c)=>{r.id==u.id&&e.rows.splice(c,1)}),e._data.forEach((r,c)=>{r.meta.row.id==u.id&&e._data.splice(c,1)}),u.element.remove()}),t.onRemoveRows&&t.onRemoveRows())}function N(){M(S()),e.header.cells[0].checked(!1)}function ee(){M(e.rows.filter(l=>!l.isSelected))}function te(l,u=!0){e.rows.sort((r,c)=>{let h=r.cell(l).value(),b=c.cell(l).value();return typeof h=="string"&&(h=String(h).toLowerCase(),b=String(b).toLowerCase()),h<b?u?-1:1:h>b?u?1:-1:0}),e.rows.forEach(r=>e.body.element.appendChild(r.element))}function P(l=!0){e.isDisabled=l,s.classList.toggle("disabled",l)}function le(l,u={separator:"	"}){return(l||e.selectedRows()).map(c=>{let h=c.cells.filter(b=>!b.checkbox&&!b.isHidden).map(b=>b.options.name);return c.text(h).join(u.separator)}).join(`
`)}function U(){let l=B()||e._columnWidths;if(!l){l=[],t.checkbox&&l.push("34px");for(let u in t.columns){let r=t.columns[u];if(r.hidden)continue;let c=r.width,h=r.minWidth,b;!c&&!h?b="1fr":c==h?b=c+"px":(c=c?c+"px":"1fr",h=h?h+"px":c,b=`minmax(${h}, ${c})`),l.push(b)}}e._columnWidths=l,e.header.element.style.gridTemplateColumns=l.join(" "),e.body.element.style.gridTemplateColumns=l.join(" ")}function ne(){let l=e.header.element,u=l.querySelectorAll(".dt-header-cell:not(.hidden)"),r=e.body.element,c=null,h,b,K,j,D,T=!1;if(l.hasResizeHandler)return;u.forEach((C,x)=>{let v=C.querySelector(".resizer");v&&(v.addEventListener("mousedown",W=>se(W,x,C)),v.addEventListener("click",W=>W.stopPropagation()))}),l.hasResizeHandler=!0;function se(C,x,v){document.addEventListener("mousemove",F),document.addEventListener("mouseup",G),c=e.header.cell(v.dataset.name),!(!t.resize&&!c.options.resize)&&(l.classList.add("resizing"),T=!0,h=x,K=C.pageX,b=getComputedStyle(l).gridTemplateColumns.split(" "),j=parseFloat(b[h]),document.body.style.cursor="e-resize",document.body.style.userSelect="none")}function F(C){if(!T)return;D=C.pageX-K;let x=c.options.minWidth||50,v=Math.max(x,j+D);ie(h,v)}function ie(C,x){x=typeof x=="number"?x+"px":x,b=getComputedStyle(l).gridTemplateColumns.split(" "),b[C]=x,l.style.gridTemplateColumns=b.join(" "),r.style.gridTemplateColumns=b.join(" "),e._columnWidths=b}function G(){document.removeEventListener("mousemove",F),document.removeEventListener("mouseup",G),T&&(T=!1,l.classList.remove("resizing"),document.body.style.cursor="",document.body.style.userSelect="",B(e._columnWidths),D&&t.onResizeColumn&&(t.onResizeColumn({column:c,widths:e._columnWidths}),D=0))}}function B(l){if(l)l[l.length-1]=`minmax(${l[l.length-1]}, 1fr)`,localStorage.setItem(p,JSON.stringify(l));else return l=localStorage.getItem(p),l&&(e._columnWidths=JSON.parse(l)),e._columnWidths}function $(){if(!(o().length&&e.header&&e.body))return;e.header.element.querySelector(".visible:last-child").classList.remove("cell-border-right"),e.body.element.childNodes.forEach((u,r)=>{u.querySelector(".visible:last-child").classList.remove("cell-border-right")});let l=t.footer.hidden?"inherit":"0px";e.elements.scrollable.style.borderBottomLeftRadius=l,e.elements.scrollable.style.borderbottomRightRadius=l}}function He(t){t=L.mergeProps(new z,t);let e=V(t);return t.place&&t.place.appendChild(e.element),window.addEventListener("click",s),window.addEventListener("keydown",p),e.destroy=R,e;function s(y){e.isDisabled||!y.target.closest(".dt-header")&&!y.target.closest(".dt-body")&&(t.onClickOut&&t.onClickOut({event:y}),!t.checkbox&&!y.cancelUnselectRows&&e.unselectRows(y))}function p(y){y.ctrlKey&&y.key=="a"&&(t.rows.selectOnClick&&t.rows.allowMultipleSelection||t.checkbox)&&(y.preventDefault(),e.selectRows()),t.onCopyClip&&y.ctrlKey&&y.key=="c"&&(t.rows.selectOnClick||t.checkbox)&&t.onCopyClip({text:e.export()}),y.key=="Escape"&&e.unselectRows(y)}function R(){window.removeEventListener("click",s),window.removeEventListener("keydown",p),e.element.remove()}}export{He as DataTable};
//# sourceMappingURL=data:application/json;base64,
